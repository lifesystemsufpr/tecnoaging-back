name: Deploy na VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST || vars.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER || vars.SSH_USER }}
      SSH_PORT: ${{ secrets.SSH_PORT || vars.SSH_PORT }}
      APP_DIR:  tecnoaging-back
      PM2_APP:  tecnoaging

    steps:
      - name: ðŸš€ Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: ðŸ”‘ Carregar chave no ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: âœ… Validar segredos/variÃ¡veis
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          set -e
          for v in SSH_PRIVATE_KEY SSH_HOST SSH_USER APP_DIR; do
            if [ -z "${!v}" ]; then
              echo "::error title=Missing::$v estÃ¡ vazio."; exit 1
            fi
          done
          [ -z "${SSH_PORT}" ] && echo "SSH_PORT nÃ£o definido, usando 22"

      - name: ðŸ“’ Adicionar host ao known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${SSH_PORT:-22}" -H "${SSH_HOST}" >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: ðŸ“‚ Enviar cÃ³digo para a VM (~/tecnoaging-back)
        run: |
          ssh -p "${SSH_PORT:-22}" "${SSH_USER}@${SSH_HOST}" "mkdir -p ~/${APP_DIR}"
          rsync -avz --delete \
            --exclude '.git' --exclude 'node_modules' --exclude 'dist' \
            -e "ssh -p ${SSH_PORT:-22}" ./ \
            "${SSH_USER}@${SSH_HOST}:~/${APP_DIR}/"

      - name: ðŸš€ Instalar deps, build e reiniciar (PM2)
        run: |
          # Passa APP_DIR e PM2_APP como variÃ¡veis de ambiente para o shell remoto
          ssh -tt -p "${SSH_PORT:-22}" -o StrictHostKeyChecking=no \
            "${SSH_USER}@${SSH_HOST}" "APP_DIR='${APP_DIR}' PM2_APP='${PM2_APP}' bash -se" << 'EOF'
            set -euo pipefail

            echo "user: $(whoami)  host: $(hostname)"
            cd ~/"${APP_DIR}"

            echo "ðŸ“¦ Instalando dependÃªncias..."
            if command -v npm >/dev/null 2>&1; then
              npm ci || npm install
            else
              echo "npm nÃ£o encontrado"; exit 1
            fi

            echo "ðŸ”¨ Buildando (se existir script build)..."
            if npm run | grep -qE '\bbuild\b'; then
              npm run build
            else
              echo "Sem script build; seguindo em frente."
            fi

            echo "ðŸš¦ PM2..."
            if ! command -v pm2 >/dev/null 2>&1; then
              npm install -g pm2
            fi

            if [ -f ecosystem.config.js ]; then
              pm2 startOrReload ecosystem.config.js
            else
              pm2 restart "${PM2_APP}" || pm2 start dist/main.js --name "${PM2_APP}"
            fi

            pm2 save
            sudo -n systemctl restart nginx || echo "nginx nÃ£o reiniciado (sem sudo NOPASSWD?)"
          EOF

