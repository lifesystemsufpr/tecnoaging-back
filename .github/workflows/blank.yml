name: Deploy na VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # Permite definir HOST/USER/PORT como Secrets **ou** Variables do repositÃ³rio
      SSH_HOST: ${{ secrets.SSH_HOST || vars.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER || vars.SSH_USER }}
      SSH_PORT: ${{ secrets.SSH_PORT || vars.SSH_PORT }}

    steps:
      - name: ðŸš€ Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: ðŸ”‘ Carregar chave no ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: âœ… Validar segredos/variÃ¡veis
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          set -e
          for v in SSH_PRIVATE_KEY SSH_HOST SSH_USER; do
            if [ -z "${!v}" ]; then
              echo "::error title=Missing secret/variable::$v estÃ¡ vazio."; exit 1
            fi
          done
          # Porta opcional
          if [ -z "${SSH_PORT}" ]; then echo "SSH_PORT nÃ£o definido, usando 22"; fi

      - name: ðŸ“’ Adicionar host ao known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${SSH_PORT:-22}" -H "${SSH_HOST}" >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: ðŸ“‚ Enviar cÃ³digo para a VM
        run: |
          rsync -avz --exclude 'node_modules' --exclude 'dist' \
            -e "ssh -p ${SSH_PORT:-22}" ./ \
            "${SSH_USER}@${SSH_HOST}:/home/${SSH_USER}/TecnoAging_web"

      - name: ðŸš€ Instalar deps, build e reiniciar
        run: |
          ssh -p "${SSH_PORT:-22}" -o StrictHostKeyChecking=no "${SSH_USER}@${SSH_HOST}" << 'EOF'
            set -e
            cd /home/${SSH_USER}/tecnoaging
            npm ci
            npm install -g pm2
            npm run build
            pm2 restart tecnoaging || pm2 start dist/main.js --name tecnoaging
            pm2 save
            sudo systemctl restart nginx
          EOF
